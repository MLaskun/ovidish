services:
  product_service:
    container_name: "product_service"
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: ./internal/product/Dockerfile
    environment:
      PRODUCT_ADDRESS: ":8080"
      DATABASE_DSN: "postgres://postgres:postgres@postgres_db:5432/ovidish?sslmode=disable"
    volumes:
      - product:/var/data
    restart: unless-stopped
    networks:
      - product
    depends_on:
      - "postgres_db"
    links:
     - postgres_db

  postgres_db:
    image: postgres
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ovidish
    ports:
      - "5432:5432"
    networks:
      - product
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  product:
    driver: bridge

volumes:
  product:
  pgdata:
